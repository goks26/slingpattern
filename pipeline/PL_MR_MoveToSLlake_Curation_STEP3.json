{
	"name": "PL_MR_MoveToSLlake_Curation_STEP3",
	"properties": {
		"activities": [
			{
				"name": "AC_LKP_DataSetProcessMasterTbl",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "AC_SV_SetMonthValue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT DataSetSource, DataSetName,DataSetQuery \nFROM [MetaDataEngine].[DataSetProcessMasterTbl]\nWHERE DataSetActiveFlg = 'Y' AND DataSetReRun = 'N' AND DataSetTransformation = 'Y'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SLIPAzureSQLMetaDataDB",
						"type": "DatasetReference",
						"parameters": {
							"RawSLDS_Schema": {
								"value": "NULL",
								"type": "Expression"
							},
							"RawSLDS_Table": {
								"value": "NULL",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "AC_LKP_DataSetProcessMasterTbl",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('AC_LKP_DataSetProcessMasterTbl').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "AC_Copy_DrivenByMetaDataEngine",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat(item().DataSetQuery,' FROM ',item().DataSetName)",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_SLIPAzureSQLMetaDataDB",
									"type": "DatasetReference",
									"parameters": {
										"RawSLDS_Schema": {
											"value": "NULL",
											"type": "Expression"
										},
										"RawSLDS_Table": {
											"value": "NULL",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_SLIPLakeIngestion_CSV",
									"type": "DatasetReference",
									"parameters": {
										"vEnv": {
											"value": "@concat(toLower(pipeline().globalParameters.vGlobalEnv),'-',pipeline().globalParameters.vGobalLakeName)\n\n",
											"type": "Expression"
										},
										"vPath": {
											"value": "@concat(pipeline().globalParameters.vGlobalSilver,'/',item().DataSetSource,'/',variables('vYear'),variables('vQtr'),'/',variables('vMonth'),'/',item().DataSetName,'/')\n\n",
											"type": "Expression"
										},
										"vDataSet": {
											"value": "@concat(replace(item().DataSetName,'.','_'),'_CURATED.csv')\n\n",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "AC_PL_AuditTrace",
							"description": "Call  SLIPAudit Pipeline to record copy audit.",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "AC_Copy_DrivenByMetaDataEngine",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_CH_DML_INSERT_SLIPAudit",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"Para_PipelineRunId": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"Para_DatasetId": 7777,
									"Para_ProgramUnitName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"Para_JobStatus": {
										"value": "Succeeded",
										"type": "Expression"
									},
									"Para_ProcessedRecordCount": {
										"value": "@activity('AC_Copy_DrivenByMetaDataEngine').output.rowsCopied\n\n",
										"type": "Expression"
									},
									"Para_RejectedRecordCount": {
										"value": "0",
										"type": "Expression"
									},
									"Para_Comments": {
										"value": "@concat( 'Total Billable Copy Duration..',activity('AC_Copy_DrivenByMetaDataEngine').output.billingReference.totalBillableDuration[0].duration)",
										"type": "Expression"
									},
									"Para_SizeOfDataRead": {
										"value": "@activity('AC_Copy_DrivenByMetaDataEngine').output.dataRead",
										"type": "Expression"
									},
									"Para_SizeOfDataWritten": {
										"value": "@activity('AC_Copy_DrivenByMetaDataEngine').output.dataWritten",
										"type": "Expression"
									},
									"Para_Duration": {
										"value": "@concat('Actual Copy Duration is  ',activity('AC_Copy_DrivenByMetaDataEngine').output.copyDuration)\n",
										"type": "Expression"
									},
									"Para_JobStage": {
										"value": "Silver Stage",
										"type": "Expression"
									},
									"Para_TargetEnv": {
										"value": "@pipeline().globalParameters.vGlobalEnv",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "AC_SV_SetQtrValue",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "vQtr",
					"value": {
						"value": "@if(equals(formatDateTime(utcnow(),'MM'),'01'),'Q1',\n if(equals(formatDateTime(utcnow(),'MM'),'02'),'Q1',\n if(equals(formatDateTime(utcnow(),'MM'),'03'),'Q1',\n if(equals(formatDateTime(utcnow(),'MM'),'04'),'Q2',\n if(equals(formatDateTime(utcnow(),'MM'),'05'),'Q2',\n if(equals(formatDateTime(utcnow(),'MM'),'06'),'Q2',\n if(equals(formatDateTime(utcnow(),'MM'),'07'),'Q3',\n if(equals(formatDateTime(utcnow(),'MM'),'08'),'Q3',\n if(equals(formatDateTime(utcnow(),'MM'),'09'),'Q3',\n if(equals(formatDateTime(utcnow(),'MM'),'10'),'Q4',\n if(equals(formatDateTime(utcnow(),'MM'),'11'),'Q4',\n if(equals(formatDateTime(utcnow(),'MM'),'12'),'Q4','NA'))))))))))))\n\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "AC_SV_SetYearValue",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "AC_SV_SetQtrValue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "vYear",
					"value": {
						"value": "@formatDateTime(utcnow(),'yyyy')\n\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "AC_SV_SetMonthValue",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "AC_SV_SetYearValue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "vMonth",
					"value": {
						"value": "@formatDateTime(utcnow(),'MMM')",
						"type": "Expression"
					}
				}
			}
		],
		"variables": {
			"vYear": {
				"type": "String"
			},
			"vMonth": {
				"type": "String"
			},
			"vQtr": {
				"type": "String"
			}
		},
		"folder": {
			"name": "PL_SLIngestionPattern/SLIPMetaDataEngine"
		},
		"annotations": []
	}
}